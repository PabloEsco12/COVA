services:
  db:
    image: postgres:14
    container_name: securechat_db
    restart: always
    env_file: .env.prod
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: securechat_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file: .env.prod
    environment:
      - FLASK_APP=app
      - FLASK_ENV=production
      - FRONTEND_URL=https://covamessagerie.be
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - ./backend/app/migrations:/app/migrations
      - ./backend/app/static/avatars:/app/app/static/avatars
      - ./backend/app/static/uploads:/app/app/static/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:5000/api/health >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend/secure_messagerie
      dockerfile: Dockerfile.prod
    container_name: securechat_frontend
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    # IMPORTANT: publier sur localhost
    ports:
      - "127.0.0.1:8080:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5

  uptime_kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime_kuma
    restart: always
    environment:
      - BASE_PATH=/monitoring
    # publier sur localhost
    ports:
      - "127.0.0.1:3001:3001"
    volumes:
      - /srv/uptime-kuma:/app/data

  autoheal:
    image: willfarrell/autoheal:latest
    container_name: autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db_data:
