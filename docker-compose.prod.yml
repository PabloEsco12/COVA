services:
  db:
    image: postgres:14
    container_name: securechat_db
    restart: always
    env_file: .env.prod
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    labels:
      - autoheal=true  # Autoheal peut redemarrer la DB si unhealthy

  redis:
    image: redis:7-alpine
    container_name: securechat_redis
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: securechat_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file: .env.prod
    environment:
      - API_DEBUG=0
    # Expose en local uniquement (reverse-proxy Nginx systeme)
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./backend/migrations:/app/migrations
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/api/health >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 25s
    labels:
      - autoheal=true

  frontend:
    build:
      context: ./frontend/secure_messagerie
      dockerfile: Dockerfile.prod   # utilise l'image Nginx prod, pas Vite dev
    container_name: securechat_frontend
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    # Servi en local, votre Nginx systeme reverse-proxy vers :8080
    ports:
      - "127.0.0.1:8080:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s
    labels:
      - autoheal=true

  uptime_kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime_kuma
    restart: always
    environment:
      - BASE_PATH=/monitoring
    # Expose en local, reverse-proxy Nginx systeme vers /monitoring/
    ports:
      - "127.0.0.1:3001:3001"
    volumes:
      - /srv/uptime-kuma:/app/data

  autoheal:
    image: willfarrell/autoheal:latest
    container_name: autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=only  # Ne soigne que les conteneurs avec label autoheal=true
      - AUTOHEAL_INTERVAL=20
      - CURL_TIMEOUT=10
      - DOCKER_SOCK=/var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db_data:

