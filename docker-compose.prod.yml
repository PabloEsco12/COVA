version: "3.9"

services:
  # ────────────────────────────── DATABASE ──────────────────────────────
  db:
    image: postgres:14
    container_name: securechat_db
    restart: always
    env_file: .env.prod
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  # ────────────────────────────── BACKEND ──────────────────────────────
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: securechat_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file: .env.prod
    environment:
      - FLASK_APP=app
      - FLASK_ENV=production
    ports:
      - "5000:5000"      # pour Nginx hôte
    volumes:
      - ./backend/app/migrations:/app/migrations
      - ./backend/app/static/avatars:/app/app/static/avatars
      - ./backend/app/static/uploads:/app/app/static/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:5000/api/health >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
    labels:
      - "autoheal=true"          # ← autoheal surveille ce service
      - "com.centurylinklabs.watchtower.enable=true"   # (optionnel) watchtower

  # ────────────────────────────── FRONTEND ──────────────────────────────
  frontend:
    build:
      context: ./frontend/secure_messagerie
      dockerfile: Dockerfile.prod
    container_name: securechat_frontend
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "8080:80"        # pour Nginx hôte
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      - "autoheal=true"
      - "com.centurylinklabs.watchtower.enable=true"   # (optionnel)

  # ────────────────────────────── AUTOHEAL ──────────────────────────────
  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal      # ne redémarre que les conteneurs étiquetés
      - AUTOHEAL_INTERVAL=10
      - CURL_TIMEOUT=5
      - SHUTDOWN_GRACE_PERIOD=10
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # ────────────────────────────── UPTIME KUMA ───────────────────────────
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: always
    ports:
      - "127.0.0.1:3001:3001"     # accessible seulement en local/Nginx
    volumes:
      - ./monitoring/uptime-kuma:/app/data

  # ────────────────────────────── WATCHTOWER (optionnel) ────────────────
  # ⚠️ Watchtower met à jour les *images* depuis un registry.
  # Dans ton cas (build local), il ne rebuild pas. Tu peux le laisser
  # pour Uptime Kuma/Autoheal, ou le désactiver.
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400   # 1x/jour
      - WATCHTOWER_LABEL_ENABLE=true     # ne met à jour que les services étiquetés
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db_data:
