services:
  db:
    image: postgres:14
    container_name: securechat_db
    env_file: .env.docker
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: securechat_backend
    depends_on:
      db:
        condition: service_healthy
    env_file: .env.docker
    environment:
      - FLASK_ENV=production
    ports:
      - "5000:5000"            # Nginx VPS reverse-proxie vers celui-ci
    restart: always

  frontend:
    build:
      context: ./frontend/secure_messagerie
      dockerfile: Dockerfile.prod
    container_name: securechat_frontend
    ports:
      - "8080:80"              # Nginx VPS reverse-proxie vers celui-ci
    restart: always
    depends_on:
      - backend

volumes:
  db_data:
