services:
  db:
    image: postgres:14
    container_name: securechat_db
    env_file: .env.docker
    ports:
      - "55432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: securechat_redis
    restart: unless-stopped
    ports:
      - "56379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: securechat_backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file: .env.docker
    environment:
      - API_DEBUG=1
    ports:
      - "8000:8000"
    volumes:
      - ./backend/migrations:/app/migrations
    restart: unless-stopped

  frontend-dev:
    image: node:20-bookworm-slim
    container_name: securechat_frontend_dev
    working_dir: /app
    volumes:
      - ./frontend/secure_messagerie:/app
    command: ["sh","-c","npm install && npm run dev -- --host 0.0.0.0"]
    ports:
      - "5173:5173"
    restart: unless-stopped

volumes:
  db_data:
