services:
  db:
    image: postgres:14
    container_name: securechat_db
    env_file: .env.docker
    ports:
      - "55432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: securechat_backend
    depends_on:
      db:
        condition: service_healthy
    env_file: .env.docker
    environment:
      - FLASK_ENV=development
    ports:
      - "5000:5000"
    volumes:
      # migrations & assets persistants (si tu veux)
      - ./backend/app/migrations:/app/migrations
      - ./backend/app/static/avatars:/app/app/static/avatars
      - ./backend/app/static/uploads:/app/app/static/uploads
    restart: unless-stopped

  # astuce : tu d√©veloppes le front *hors docker* avec npm run dev
  # mais si tu veux un service dev dans docker :
  frontend-dev:
    image: node:18-alpine
    container_name: securechat_frontend_dev
    working_dir: /app
    volumes:
      - ./frontend/secure_messagerie:/app
    command: ["npm","run","dev","--","--host","0.0.0.0"]
    ports:
      - "5173:5173"
    restart: unless-stopped

volumes:
  db_data:
